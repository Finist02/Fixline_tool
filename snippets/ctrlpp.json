{ 
    "enum":{ 
      "prefix":[ 
        "enum"
      ],
      "body":[ 
        "//------------------------------------------------------------------------------",
        "/**",
        "\t@brief",
        "\t@details",
        "*/",
        "enum ${1:Enum}",
        "{",
        "\t/// ${2:Enumerator} ...",
        "\t${2:Enumerator} = 0",
        "};"
      ],
      "description":"Enum definition"
    },
    "enumerator":{ 
      "prefix":[ 
        "enumerator"
      ],
      "body":[ 
        "/// ${1:Enumerator} ...",
        "${1:Enumerator},"
      ],
      "description":"Enumerator definition"
    },
    "class":{ 
      "prefix":[ 
        "class"
      ],
      "body":[ 
        "//------------------------------------------------------------------------------",
        "/**",
        "\t@brief ${1:Class} provides ...",
        "\t@details",
        "*/",
        "class ${1:Class}",
        "{",
        "\t//----------------------------------------------------------------------------",
        "\t//@public",
        "\t//----------------------------------------------------------------------------",
        "",
        "\t//----------------------------------------------------------------------------",
        "\tpublic ${1:Class}(){}",
        "",
        "\t//----------------------------------------------------------------------------",
        "\t//@protected",
        "\t//----------------------------------------------------------------------------",
        "",
        "\t//----------------------------------------------------------------------------",
        "\t//@private",
        "\t//----------------------------------------------------------------------------",
        "};"
      ],
      "description":"Class definition"
    },
    "struct":{ 
      "prefix":[ 
        "struct"
      ],
      "body":[ 
        "//------------------------------------------------------------------------------",
        "/**",
        "\t@brief ${1:Struct} provides ...",
        "\t@details",
        "*/",
        "struct ${1:Struct}",
        "{",
        "\t//----------------------------------------------------------------------------",
        "\t//@public",
        "\t//----------------------------------------------------------------------------",
        "",
        "\t//----------------------------------------------------------------------------",
        "\tpublic ${1:Struct}(){}",
        "",
        "\t//----------------------------------------------------------------------------",
        "\t//@protected",
        "\t//----------------------------------------------------------------------------",
        "",
        "\t//----------------------------------------------------------------------------",
        "\t//@private",
        "\t//----------------------------------------------------------------------------",
        "};"
      ],
      "description":"Struct definition"
    },
    "classGetSet":{ 
      "prefix":[ 
        "class-get/set",
        "struct-get/set"
      ],
      "body":[ 
        "\t//----------------------------------------------------------------------------",
        "\t/// ${1:property} ",
        "\t${2:varType} _${1:property};",
        "\t//----------------------------------------------------------------------------",
        "\t/**@brief Function returns the ${1:property}.",
        "\t@return Property ${1:property}.",
        "\t@exception A empty (not initialized) ${2:varType}.",
        "*/",
        "\tpublic ${2:varType} get${1:Property}(){return this._${1:property};}",
        "",
        "\t//----------------------------------------------------------------------------",
        "\t/**@brief Function set the ${1:property}.",
        "\t/**@param[in] ${1:Property} ",
        "*/",
        "\tpublic set${1:Property}(const ${2:varType} &${1:Property}){this._${1:Property} = ${1:Property};}"
      ],
      "description":"Class get/set property"
    },
    "classHasSet":{ 
      "prefix":[ 
        "class-is/set",
        "struct-is/set"
      ],
      "body":[ 
        "\t//----------------------------------------------------------------------------",
        "\t/// flag ${1:flag} ",
        "\tbool _is${1:flag};",
        "\t//----------------------------------------------------------------------------",
        "\t/**@brief Function checks if the flag _is${1:flag} are setted.",
        "\t@return TRUE when _is${1:flag} are setted, else FALSE.",
        "*/",
        "\tpublic bool is${1:flag}() {return this._is${1:flag};}",
        "",
        "\t//----------------------------------------------------------------------------",
        "\t/**@brief Function set the flag ${1:flag}.",
        "\t/**@param[in] ${1:flag} ",
        "*/",
        "\tpublic set${1:flag}(const bool &flag) {this._is${1:flag} = flag;}"
      ],
      "description":"Class flag"
    }
  }

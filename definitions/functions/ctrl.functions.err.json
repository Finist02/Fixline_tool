{
  "hover": {
    "format": "```\n${definition}\n```\n\n-------\n\nPredefined WinCC OA function\n\n${description}"
  },
  "completionItemKind": "Function",
  "defines": [
    {
      "definition": "errClass makeError(string catalog, int prio, int type, int code [, string note1 [, string note2 [, string note3]]])\\nerrClass makeError(bit32 bit, int prio, int type, int code, string dp, int man, int user[,string s1[,string s2[,string s3]]])",
      "description": [
        "The function returns an error (in an errClass variable) and shows an error message or an information message in accordance with the _errors.cat error message catalog in <wincc_oa_path>/msg/<lang> or an error or information message according to your own error catalog. If you use the first alternative in the example further on, you have to use the _errors.cat catalog. The second alternative allows you to use your own catalog file with your own error or information messages. In this way, the function can be used to handle own errors and to display own error and information messages."
      ],
      "id": "makeError"
    },
    {
      "definition": "int getErrorType(errClass err | dyn_errClass err)",
      "description": [],
      "id": "getErrorType"
    },
    {
      "definition": "int getErrorPriority(errClass err | dyn_errClass err)",
      "description": [],
      "id": "getErrorPriority"
    },
    {
      "definition": "int getErrorCode(errClass err | dyn_errClass err)",
      "description": [],
      "id": "getErrorCode"
    },
    {
      "definition": "string getErrorDpName(errClass err | dyn_errClass err)",
      "description": [],
      "id": "getErrorDpName"
    },
    {
      "definition": "int getErrorManId(errClass err | dyn_errClass err)",
      "description": [],
      "id": "getErrorManId"
    },
    {
      "definition": "int getErrorUserId(errClass err | dyn_errClass err)",
      "description": [],
      "id": "getErrorUserId"
    },
    {
      "definition": "string getErrorText(errClass err | dyn_errClass err)",
      "description": [],
      "id": "getErrorText"
    },
    {
      "definition": "string getErrorCatalog(errClass err | dyn_errClass err)",
      "description": [],
      "id": "getErrorCatalog"
    },
    {
      "definition": "dyn_string getErrorStackTrace(errClass err | dyn_errClass err)",
      "description": [],
      "id": "getErrorStackTrace"
    },
    {
      "definition": "int throwError(errClass err | dyn_errClass err)",
      "description": [
        "Passes a WinCC OA error to the internal error handler."
      ],
      "id": "throwError"
    },
    {
      "definition": "dyn_errClass getLastError()",
      "description": [
        "Gets the last error that occurred."
      ],
      "id": "getLastError"
    },
    {
      "definition": "int clearLastError()",
      "description": [],
      "id": "clearLastError"
    },
    {
      "definition": "int throw(errClass exception)",
      "description": [
        "Signals an erroneous condition by using an error class variable."
      ],
      "id": "throw"
    },
    {
      "definition": "dyn_errClass getLastException()",
      "description": [],
      "id": "getLastException"
    },
    {
      "definition": "int setThrowErrorAsException(bool on = true)",
      "description": [],
      "id": "setThrowErrorAsException"
    }
  ]
}
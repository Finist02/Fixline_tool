{
    "hover": {
        "format" : "Predefined WinCC OA variable type\n\n-------\n\n${description}"
    },
    "completionItemKind": "Keyword",
    "defines":[
        {
            "definition": "anytype",
            "description": [
                "Any variable type, depending on the first variable assignment",
                "@code",
                "examp_func()",
                "{",
                "  anytype a;",
                "  a  = false;",
                "  DebugN(a); //Returns FALSE",
                "  a = (float)\"12\";",
                "  DebugN(a); //Returns TRUE",
                "}",
                "@endcode"
            ],
            "id": "anytype"
        },
        {
            "definition": "atime",
            "description": [
                "Time of the alarm, with extra index for several simultaneous alarms"
            ],
            "id": "atime"
        },
        {
            "definition": "bit32",
            "description": [
                "Bit pattern (32 bit)",
                "A bit32 constant has to be entered with the suffix *'U'*",
                ". For example: +4294967295U",
                "### Value range:",
                "0 to +4294967295"
            ],
            "id": "bit32"
        },
        {
            "definition": "bit64",
            "description": [
                "Bit pattern (64 bit)",
                "A bit32 constant has to be entered with the suffix *'UL'*",
                ". For example: +18446744073709551615UL",
                "### Value range:",
                "0 to +18446744073709551615"
            ],
            "id": "bit64"
        },
        {
            "definition": "errClass",
            "description": [
                "Specifies the error classes"
            ],
            "id": "errClass"
        },
        {
            "definition": "langString",
            "description": [
                "Language string",
                "are used in the Control programming language for supporting its multilingual capability"
            ],
            "id": "langString"
        },
        {
            "definition": "mixed",
            "description": [
                "Any type variable",
                "Contrary to 'anytype' the variable type 'mixed' gets each time a new type.",
                "@code",
                "examp_func()",
                "{",
                "  anytype a;",
                "  mixed   m;",
                "  a  = false;",
                "  m = false;",
                "  DebugN(a); //Returns FALSE",
                "  DebugN(m); //Returns FALSE",
                "  a = \"example\";",
                "  m = \"example\";",
                "  DebugN(a); //Returns TRUE",
                "  DebugN(m); //Returns \"example\"",
                "}",
                "@endcode"
            ],
            "id": "mixed"
        },
        {
            "definition": "mapping",
            "description": [
                "Mapping saves arbitrary key/value pairs. The pairs are saved in two arrays."
            ],
            "id": "mapping"
        },
        {
            "definition": "va_list",
            "description": [
                "An arbitrary number of parameters is defined via va_list.",
                "+ va_start sets the parameters into the va_list variable.",
                "+ va_arg is like an iterator and it handles always the next parameter of the va_list variable.",
                "+ va_end stops the handling of the parameter list."
            ],
            "id": "va_list"
        },
        {
            "definition": "dyn_anytype",
            "description": [
                "Dynamic array of elements of any data type"
            ],
            "id": "dyn_anytype"
        },
        {
            "definition": "dyn_bit32",
            "description": [
                "Dynamic bit pattern array (32 bit)"
            ],
            "id": "dyn_bit32"
        },
        {
            "definition": "dyn_bit64",
            "description": [
                "Dynamic bit pattern array (64 bit)"
            ],
            "id": "dyn_bit64"
        },
        {
            "definition": "dyn_errClass",
            "description": [
                "Dynamic array of WinCC OA internal error class"
            ],
            "id": "dyn_errClass"
        },
        {
            "definition": "function_ptr",
            "description": [
            ],
            "id": "function_ptr"
        },
        {
            "definition": "shared_ptr",
            "description": [
            ],
            "id": "shared_ptr"
        },
        {
            "definition": "vector",
            "description": [
            ],
            "id": "vector"
        },
        {
            "definition": "dbRecordset",
            "description": [
                "Access variable for ADO interface"
            ],
            "id": "dbRecordset"
        },
        {
            "definition": "dbConnection",
            "description": [
                "Access variable for ADO interface"
            ],
            "id": "dbConnection"
        },
        {
            "definition": "dbCommand",
            "description": [
                "Access variable for ADO interface"
            ],
            "id": "dbCommand"
        },
        {
            "definition": "shape",
            "description": [
                "Pointer for graphic elements"
            ],
            "id": "shape"
        },
        {
            "definition": "idispatch",
            "description": [
                "Data type for methods of ActiveX objects"
            ],
            "id": "idispatch"
        },
        {
            "definition": "dyn_atime",
            "description": [
            ],
            "id": "dyn_atime"
        },
        {
            "definition": "dyn_langString",
            "description": [
                "Dynamic array of language strings"
            ],
            "id": "dyn_langString"
        },
        {
            "definition": "dyn_mixed",
            "description": [
            ],
            "id": "dyn_mixed"
        },
        {
            "definition": "dyn_mapping",
            "description": [
                "Dynamic Mapping"
            ],
            "id": "dyn_mapping"
        },
        {
            "definition": "dyn_dbConnection",
            "description": [
            ],
            "id": "dyn_dbConnection"
        },
        {
            "definition": "dyn_dbCommand",
            "description": [
            ],
            "id": "dyn_dbCommand"
        },
        {
            "definition": "dyn_dbRecordset",
            "description": [
            ],
            "id": "dyn_dbRecordset"
        },
        {
            "definition": "dyn_shape",
            "description": [
                "Dynamic array of dynamic arrays of pointers for graphic elements"
            ],
            "id": "dyn_shape"
        },
        {
            "definition": "dyn_function_ptr",
            "description": [
            ],
            "id": "dyn_function_ptr"
        },
        {
            "definition": "dyn_dyn_atime",
            "description": [
                "Dynamic array of dynamic atime arrays"
            ],
            "id": "dyn_dyn_atime"
        },
        {
            "definition": "dyn_dyn_langString",
            "description": [
                "Dynamic array of dynamic arrays of multi-language strings"
            ],
            "id": "dyn_dyn_langString"
        },
        {
            "definition": "dyn_dyn_bit32",
            "description": [
                "Dynamic array of dynamic bit pattern arrays (32 bit)"
            ],
            "id": "dyn_dyn_bit32"
        },
        {
            "definition": "dyn_dyn_bit64",
            "description": [
                "Dynamic array of dynamic bit pattern arrays (64 bit)"
            ],
            "id": "dyn_dyn_bit64"
        },
        {
            "definition": "dyn_dyn_anytype",
            "description": [
                "Dynamic array of dynamic array of elements of any data type"
            ],
            "id": "dyn_dyn_anytype"
        },
        {
            "definition": "dyn_dyn_mixed",
            "description": [
            ],
            "id": "dyn_dyn_mixed"
        },
        {
            "definition": "dyn_dyn_errClass",
            "description": [
                "Dynamic array of dynamic arrays of error classes"
            ],
            "id": "dyn_dyn_errClass"
        }
    ]
}
